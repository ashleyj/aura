allprojects  {
  apply plugin: 'java'

  group = 'aura'
  version = '1.0-SNAPSHOT'
}

apply plugin: 'distribution'

subprojects {
  apply plugin: 'java'
  sourceCompatibility = 1.7
  targetCompatibility = 1.7

  
  repositories {
    mavenLocal()
    
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://repo.maven.apache.org/maven2" }
  }
}

task buildLib(type:Exec) {
  commandLine 'vm/build.sh'
  description "Build VM libraries"

  println "Building Virtual Machine Libraries"

  doLast {
    tasks.copyBinaries.execute()
  }
}

task copyBinaries(type:Exec) {
  println "Copying libraries"
  commandLine 'vm/copy-binaries.sh'
}


task distTargz( type: Tar) {
	baseName = "aura-dist"

	into("${baseName}/lib") {
		from  "compiler/build/libs/aura-compiler-${version}.jar" rename { String fileName -> fileName.replace("aura-compiler-${version}.jar", "aura-compiler.jar") }
		from("rt/build/libs/aura-rt-${version}.jar") rename { String fileName -> fileName.replace("aura-rt-${version}.jar", "aura-rt.jar") }
		from("cacerts/full/build/libs/cacerts-full-${version}.jar") rename { String fileName -> fileName.replace("cacerts-full-${version}.jar", "cacerts-full.jar") }
	}

	into("${baseName}/src") {
		from("rt/build/libs/aura-rt-${version}-source.jar") rename { String fileName -> fileName.replace("aura-rt-${version}-source.jar", "aura-rt-sources.jar") }
	}

	into ("${baseName}/lib/vm") {
		from ("vm/target/binaries")
	}

	into ("${baseName}/bin") {
		from ("bin")
	}

	//LICENSE INFORMATION
	into ("${baseName}/license/rt") {
	from ("rt/NOTICE.txt")
	from ("rt/LICENSE.txt")
	}

	into ("${baseName}/license/compiler") {
		from ("compiler/NOTICE.txt")
		from ("compiler/LICENSE.txt")
	}

	into ("${baseName}/license/vm") {
		from ("vm/NOTICE.txt")
		from ("vm/LICENSE.txt")
	}

	extension = 'tar.gz'
	compression = Compression.GZIP
}
